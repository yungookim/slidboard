HTTP server running on 8081
/init==============================================
Raw Message : {"deviceId":"00000000-2b17-f0eb-0000-00001ef377b9","from":"MOBILE"}
Message parsed
{ deviceId: '00000000-2b17-f0eb-0000-00001ef377b9',
  from: 'MOBILE' }
===================================================
{ socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 613,
     _bytesDispatched: 164,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { stack: [Object],
        _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        _events: [Object],
        httpAllowHalfOpen: false,
        cache: {},
        settings: [Object],
        redirects: {},
        isCallbacks: {},
        _locals: [Object],
        dynamicViewHelpers: {},
        errorHandlers: [],
        route: '/',
        routes: [Object],
        router: [Getter],
        __usedRouter: true,
        _connectionKey: '4:0.0.0.0:8081' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Mon Nov 19 2012 18:05:00 GMT-0500 (EST),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object],
        _headers: [Object],
        _headerNames: [Object],
        app: [Object],
        req: [Circular] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 613,
     _bytesDispatched: 164,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { stack: [Object],
        _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        _events: [Object],
        httpAllowHalfOpen: false,
        cache: {},
        settings: [Object],
        redirects: {},
        isCallbacks: {},
        _locals: [Object],
        dynamicViewHelpers: {},
        errorHandlers: [],
        route: '/',
        routes: [Object],
        router: [Getter],
        __usedRouter: true,
        _connectionKey: '4:0.0.0.0:8081' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Mon Nov 19 2012 18:05:00 GMT-0500 (EST),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object],
        _headers: [Object],
        _headerNames: [Object],
        app: [Object],
        req: [Circular] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'content-type': 'image/jpg',
     'user-agent': 'Dalvik/1.4.0 (Linux; U; Android 2.3.3; SAMSUNG-SGH-I997R Build/GINGERBREAD)',
     host: '69.164.219.86:8081',
     connection: 'Keep-Alive',
     'content-length': '17110',
     'accept-encoding': 'gzip' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/saveFile',
  method: 'POST',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 613,
     _bytesDispatched: 164,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { stack: [Object],
        _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        _events: [Object],
        httpAllowHalfOpen: false,
        cache: {},
        settings: [Object],
        redirects: {},
        isCallbacks: {},
        _locals: [Object],
        dynamicViewHelpers: {},
        errorHandlers: [],
        route: '/',
        routes: [Object],
        router: [Getter],
        __usedRouter: true,
        _connectionKey: '4:0.0.0.0:8081' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Mon Nov 19 2012 18:05:00 GMT-0500 (EST),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object],
        _headers: [Object],
        _headerNames: [Object],
        app: [Object],
        req: [Circular] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/saveFile',
  query: {},
  app: 
   { stack: [ [Object], [Object], [Object] ],
     _connections: 1,
     connections: [Getter/Setter],
     allowHalfOpen: true,
     _handle: 
      { writeQueueSize: 0,
        onconnection: [Function: onconnection],
        owner: [Circular] },
     _events: 
      { request: [Function],
        connection: [Function: connectionListener],
        listening: [Function] },
     httpAllowHalfOpen: false,
     cache: {},
     settings: { env: 'development', hints: true },
     redirects: {},
     isCallbacks: {},
     _locals: { settings: [Object], app: [Circular] },
     dynamicViewHelpers: {},
     errorHandlers: [],
     route: '/',
     routes: 
      { app: [Circular],
        routes: [Object],
        params: {},
        _params: [],
        middleware: [Function] },
     router: [Getter],
     __usedRouter: true,
     _connectionKey: '4:0.0.0.0:8081' },
  res: 
   { output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _hasBody: true,
     _trailer: '',
     finished: false,
     socket: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 613,
        _bytesDispatched: 164,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: Mon Nov 19 2012 18:05:00 GMT-0500 (EST),
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: [Circular],
        _paused: false },
     connection: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 613,
        _bytesDispatched: 164,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: Mon Nov 19 2012 18:05:00 GMT-0500 (EST),
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: [Circular],
        _paused: false },
     _events: { finish: [Function] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     app: 
      { stack: [Object],
        _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        _events: [Object],
        httpAllowHalfOpen: false,
        cache: {},
        settings: [Object],
        redirects: {},
        isCallbacks: {},
        _locals: [Object],
        dynamicViewHelpers: {},
        errorHandlers: [],
        route: '/',
        routes: [Object],
        router: [Getter],
        __usedRouter: true,
        _connectionKey: '4:0.0.0.0:8081' },
     req: [Circular] },
  next: [Function: next],
  body: {},
  _route_index: 1,
  route: 
   { path: '/saveFile',
     method: 'post',
     callbacks: [ [Function] ],
     keys: [],
     regexp: /^\/saveFile\/?$/i,
     params: [] },
  params: [] }
{ socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 19365,
     _bytesDispatched: 328,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { stack: [Object],
        _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        _events: [Object],
        httpAllowHalfOpen: false,
        cache: {},
        settings: [Object],
        redirects: {},
        isCallbacks: {},
        _locals: [Object],
        dynamicViewHelpers: {},
        errorHandlers: [],
        route: '/',
        routes: [Object],
        router: [Getter],
        __usedRouter: true,
        _connectionKey: '4:0.0.0.0:8081' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Mon Nov 19 2012 18:05:32 GMT-0500 (EST),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object],
        _headers: [Object],
        _headerNames: [Object],
        app: [Object],
        req: [Circular] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 19365,
     _bytesDispatched: 328,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { stack: [Object],
        _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        _events: [Object],
        httpAllowHalfOpen: false,
        cache: {},
        settings: [Object],
        redirects: {},
        isCallbacks: {},
        _locals: [Object],
        dynamicViewHelpers: {},
        errorHandlers: [],
        route: '/',
        routes: [Object],
        router: [Getter],
        __usedRouter: true,
        _connectionKey: '4:0.0.0.0:8081' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Mon Nov 19 2012 18:05:32 GMT-0500 (EST),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object],
        _headers: [Object],
        _headerNames: [Object],
        app: [Object],
        req: [Circular] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'content-type': 'image/png',
     'user-agent': 'Dalvik/1.4.0 (Linux; U; Android 2.3.3; SAMSUNG-SGH-I997R Build/GINGERBREAD)',
     host: '69.164.219.86:8081',
     connection: 'Keep-Alive',
     'content-length': '461944',
     'accept-encoding': 'gzip' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/saveFile',
  method: 'POST',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 19365,
     _bytesDispatched: 328,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { stack: [Object],
        _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        _events: [Object],
        httpAllowHalfOpen: false,
        cache: {},
        settings: [Object],
        redirects: {},
        isCallbacks: {},
        _locals: [Object],
        dynamicViewHelpers: {},
        errorHandlers: [],
        route: '/',
        routes: [Object],
        router: [Getter],
        __usedRouter: true,
        _connectionKey: '4:0.0.0.0:8081' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Mon Nov 19 2012 18:05:32 GMT-0500 (EST),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object],
        _headers: [Object],
        _headerNames: [Object],
        app: [Object],
        req: [Circular] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/saveFile',
  query: {},
  app: 
   { stack: [ [Object], [Object], [Object] ],
     _connections: 1,
     connections: [Getter/Setter],
     allowHalfOpen: true,
     _handle: 
      { writeQueueSize: 0,
        onconnection: [Function: onconnection],
        owner: [Circular] },
     _events: 
      { request: [Function],
        connection: [Function: connectionListener],
        listening: [Function] },
     httpAllowHalfOpen: false,
     cache: {},
     settings: { env: 'development', hints: true },
     redirects: {},
     isCallbacks: {},
     _locals: { settings: [Object], app: [Circular] },
     dynamicViewHelpers: {},
     errorHandlers: [],
     route: '/',
     routes: 
      { app: [Circular],
        routes: [Object],
        params: {},
        _params: [],
        middleware: [Function] },
     router: [Getter],
     __usedRouter: true,
     _connectionKey: '4:0.0.0.0:8081' },
  res: 
   { output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _hasBody: true,
     _trailer: '',
     finished: false,
     socket: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 19365,
        _bytesDispatched: 328,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: Mon Nov 19 2012 18:05:32 GMT-0500 (EST),
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: [Circular],
        _paused: false },
     connection: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 19365,
        _bytesDispatched: 328,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: Mon Nov 19 2012 18:05:32 GMT-0500 (EST),
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: [Circular],
        _paused: false },
     _events: { finish: [Function] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     app: 
      { stack: [Object],
        _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        _events: [Object],
        httpAllowHalfOpen: false,
        cache: {},
        settings: [Object],
        redirects: {},
        isCallbacks: {},
        _locals: [Object],
        dynamicViewHelpers: {},
        errorHandlers: [],
        route: '/',
        routes: [Object],
        router: [Getter],
        __usedRouter: true,
        _connectionKey: '4:0.0.0.0:8081' },
     req: [Circular] },
  next: [Function: next],
  body: {},
  _route_index: 1,
  route: 
   { path: '/saveFile',
     method: 'post',
     callbacks: [ [Function] ],
     keys: [],
     regexp: /^\/saveFile\/?$/i,
     params: [] },
  params: [] }
{ socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 486897,
     _bytesDispatched: 492,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { stack: [Object],
        _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        _events: [Object],
        httpAllowHalfOpen: false,
        cache: {},
        settings: [Object],
        redirects: {},
        isCallbacks: {},
        _locals: [Object],
        dynamicViewHelpers: {},
        errorHandlers: [],
        route: '/',
        routes: [Object],
        router: [Getter],
        __usedRouter: true,
        _connectionKey: '4:0.0.0.0:8081' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Mon Nov 19 2012 18:05:33 GMT-0500 (EST),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object],
        _headers: [Object],
        _headerNames: [Object],
        app: [Object],
        req: [Circular] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 486897,
     _bytesDispatched: 492,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { stack: [Object],
        _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        _events: [Object],
        httpAllowHalfOpen: false,
        cache: {},
        settings: [Object],
        redirects: {},
        isCallbacks: {},
        _locals: [Object],
        dynamicViewHelpers: {},
        errorHandlers: [],
        route: '/',
        routes: [Object],
        router: [Getter],
        __usedRouter: true,
        _connectionKey: '4:0.0.0.0:8081' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Mon Nov 19 2012 18:05:33 GMT-0500 (EST),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object],
        _headers: [Object],
        _headerNames: [Object],
        app: [Object],
        req: [Circular] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { 'content-type': 'image/png',
     'user-agent': 'Dalvik/1.4.0 (Linux; U; Android 2.3.3; SAMSUNG-SGH-I997R Build/GINGERBREAD)',
     host: '69.164.219.86:8081',
     connection: 'Keep-Alive',
     'content-length': '36481',
     'accept-encoding': 'gzip' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/saveFile',
  method: 'POST',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 486897,
     _bytesDispatched: 492,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { stack: [Object],
        _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        _events: [Object],
        httpAllowHalfOpen: false,
        cache: {},
        settings: [Object],
        redirects: {},
        isCallbacks: {},
        _locals: [Object],
        dynamicViewHelpers: {},
        errorHandlers: [],
        route: '/',
        routes: [Object],
        router: [Getter],
        __usedRouter: true,
        _connectionKey: '4:0.0.0.0:8081' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Mon Nov 19 2012 18:05:33 GMT-0500 (EST),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object],
        _headers: [Object],
        _headerNames: [Object],
        app: [Object],
        req: [Circular] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/saveFile',
  query: {},
  app: 
   { stack: [ [Object], [Object], [Object] ],
     _connections: 1,
     connections: [Getter/Setter],
     allowHalfOpen: true,
     _handle: 
      { writeQueueSize: 0,
        onconnection: [Function: onconnection],
        owner: [Circular] },
     _events: 
      { request: [Function],
        connection: [Function: connectionListener],
        listening: [Function] },
     httpAllowHalfOpen: false,
     cache: {},
     settings: { env: 'development', hints: true },
     redirects: {},
     isCallbacks: {},
     _locals: { settings: [Object], app: [Circular] },
     dynamicViewHelpers: {},
     errorHandlers: [],
     route: '/',
     routes: 
      { app: [Circular],
        routes: [Object],
        params: {},
        _params: [],
        middleware: [Function] },
     router: [Getter],
     __usedRouter: true,
     _connectionKey: '4:0.0.0.0:8081' },
  res: 
   { output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _hasBody: true,
     _trailer: '',
     finished: false,
     socket: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 486897,
        _bytesDispatched: 492,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: Mon Nov 19 2012 18:05:33 GMT-0500 (EST),
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: [Circular],
        _paused: false },
     connection: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 486897,
        _bytesDispatched: 492,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: Mon Nov 19 2012 18:05:33 GMT-0500 (EST),
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: [Circular],
        _paused: false },
     _events: { finish: [Function] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     app: 
      { stack: [Object],
        _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        _events: [Object],
        httpAllowHalfOpen: false,
        cache: {},
        settings: [Object],
        redirects: {},
        isCallbacks: {},
        _locals: [Object],
        dynamicViewHelpers: {},
        errorHandlers: [],
        route: '/',
        routes: [Object],
        router: [Getter],
        __usedRouter: true,
        _connectionKey: '4:0.0.0.0:8081' },
     req: [Circular] },
  next: [Function: next],
  body: {},
  _route_index: 1,
  route: 
   { path: '/saveFile',
     method: 'post',
     callbacks: [ [Function] ],
     keys: [],
     regexp: /^\/saveFile\/?$/i,
     params: [] },
  params: [] }
Indexing 766 items
Indexed 765 items.
Indexing 3330 items
Indexed 3329 items.
